package medium;

import java.util.Arrays;

public class Problem_3153_SumDigitDifferences {
    public static long combination(int n){
        return (long) n * (n - 1) / 2;
    }
    public static long getRes(long res, int[] cnt1, int[] cnt2, int[] cnt3, int i) {
        if (cnt1[i] > 1){
            res -= combination(cnt1[i]);
        }
        if (cnt2[i] > 1){
            res -= combination(cnt2[i]);
        }
        if (cnt3[i] > 1){
            res -= combination(cnt3[i]);
        }
        return res;
    }
    public static long sumDigitDifferences(int[] nums) {
        // n <= 10^9 --> tao ra 9 mang dem phan phoi (i = 1-->9) tuong ung chu so thu i
        /*
        res = 0;
            Duyet mang dem phan phoi (i = 1 --> 9)
            + b1, dem to hop so lan xuat hien cua cac cap:
                -- so lan xuat hien cua tat ca cac chu so = sum_all(cnt[i])
                -- so lan tong = 2_C_sum_all
                -- res = so lan tong
            + b2, tru di so lan xuat hien trung lap
                -- neu cnt[i] > 1: res -= 2_C_cnt[i]
            + b3, return res
         */
        // do phuc tap: O(n*10) = O(n)
        long res = 0;
        int[] cnt1 = new int[11];
        int[] cnt2 = new int[11];
        int[] cnt3 = new int[11];
        int[] cnt4 = new int[11];
        int[] cnt5 = new int[11];
        int[] cnt6 = new int[11];
        int[] cnt7 = new int[11];
        int[] cnt8 = new int[11];
        int[] cnt9 = new int[11];
        int[] cnt10 = new int[11];
        for (int i = 0; i < nums.length; i++){
            String str = String.valueOf(nums[i]);
            for (int ii = 0; ii < str.length(); ii++){
                if (ii == 0){
                    cnt1[str.charAt(ii) - '0']++;
                }
                if (ii == 1){
                    cnt2[str.charAt(ii) - '0']++;
                }
                if (ii == 2){
                    cnt3[str.charAt(ii) - '0']++;
                }
                if (ii == 3){
                    cnt4[str.charAt(ii) - '0']++;
                }
                if (ii == 4){
                    cnt5[str.charAt(ii) - '0']++;
                }
                if (ii == 5){
                    cnt6[str.charAt(ii) - '0']++;
                }
                if (ii == 6){
                    cnt7[str.charAt(ii) - '0']++;
                }
                if (ii == 7){
                    cnt8[str.charAt(ii) - '0']++;
                }
                if (ii == 8){
                    cnt9[str.charAt(ii) - '0']++;
                }
                if (ii == 9){
                    cnt10[str.charAt(ii) - '0']++;
                }
            }
        }
//        System.out.println(Arrays.toString(cnt1));
        int sumOfAllOccurrences1 = 0;
        int sumOfAllOccurrences2 = 0;
        int sumOfAllOccurrences3 = 0;
        int sumOfAllOccurrences4 = 0;
        int sumOfAllOccurrences5 = 0;
        int sumOfAllOccurrences6 = 0;
        int sumOfAllOccurrences7 = 0;
        int sumOfAllOccurrences8 = 0;
        int sumOfAllOccurrences9 = 0;
        int sumOfAllOccurrences10 = 0;
        for (int i = 0; i <= 9; i++){
            sumOfAllOccurrences1 += cnt1[i];
            sumOfAllOccurrences2 += cnt2[i];
            sumOfAllOccurrences3 += cnt3[i];
            sumOfAllOccurrences4 += cnt4[i];
            sumOfAllOccurrences5 += cnt5[i];
            sumOfAllOccurrences6 += cnt6[i];
            sumOfAllOccurrences7 += cnt7[i];
            sumOfAllOccurrences8 += cnt8[i];
            sumOfAllOccurrences9 += cnt9[i];
            sumOfAllOccurrences10 += cnt10[i];
            res = getRes(res, cnt1, cnt2, cnt3, i);
            res = getRes(res, cnt4, cnt5, cnt6, i);
            res = getRes(res, cnt7, cnt8, cnt9, i);
            if (cnt10[i] > 1){
                res -= combination(cnt10[i]);
            }
        }
//        System.out.println(res);
//        System.out.println("OK");
//        System.out.println(sumOfAllOccurrences1);
//        System.out.println(sumOfAllOccurrences2);
//        System.out.println(sumOfAllOccurrences3);
//        System.out.println(sumOfAllOccurrences4);
//        System.out.println(sumOfAllOccurrences5);
//        System.out.println(sumOfAllOccurrences6);
//        System.out.println("OK 2");
//        System.out.println(combination(sumOfAllOccurrences1));
//        System.out.println(combination(sumOfAllOccurrences2));
        res += combination(sumOfAllOccurrences1);
        res += combination(sumOfAllOccurrences2);
        res += combination(sumOfAllOccurrences3);
        res += combination(sumOfAllOccurrences4);
        res += combination(sumOfAllOccurrences5);
        res += combination(sumOfAllOccurrences6);
        res += combination(sumOfAllOccurrences7);
        res += combination(sumOfAllOccurrences8);
        res += combination(sumOfAllOccurrences9);
        res += combination(sumOfAllOccurrences10);
        return res;
    }

    public static void main(String[] args) {
        System.out.println(sumDigitDifferences(new int[]{}));
    }
}
